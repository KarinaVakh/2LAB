#include <iostream>
#include <conio.h>

using namespace std;

class Point {
public:
    // меняем на privat protected
    // protected
    int x, y; // два атрибута
    Point() {// констурктор
        printf("Point()\n");  // отладочный вывод для того чтобы видеть какой констурктор вызывается
        x = 0;
        y = 0; // начальные значения

    }
    Point(int x, int y) {// констурктор с параметрами
        printf("Point(int x, int y)\n");  // отладочный вывод для того чтобы видеть какой констурктор вызывается
        this->x = x;
        this->y = y; // начальные значения

    }
    Point(const Point& p) {// констурктор копирующий переносит все свойства из того обькта который передали
        printf("Point(const Point &p)\n");  // отладочный вывод для того чтобы видеть какой констурктор вызывается
        x = p.x;
        y = p.y; // начальные значения

    }
    ~Point() { // диструктор
        printf("%d, %d\n", x, y); // вывод текущего состояния обьекта чтобы видеть что в нем хранилось когда он удаляется
        printf("~Point()\n");
    }
};

    int main(int arg, char* argv[])
    {
        Point p; // задаем обьекты статически
        Point p2(10, 20); // задаем обьекты статически
        Point p3(p2);    // (при выволе создастся 3 обьекта с помощью трез констуркторов (удалится 2. 3. 1 обьекты) (это были классы атрибуты конструкторы , уничтожение статтически созданных обьектов), создание статических обьектов
        _getch();
        return 0;
    }
